{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js??ref--7-1!/app/src/theme/SearchBar/lib/utils.js","dependencies":[{"path":"/app/src/theme/SearchBar/lib/utils.js","mtime":1597275233000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1598031185000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1598031185000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}