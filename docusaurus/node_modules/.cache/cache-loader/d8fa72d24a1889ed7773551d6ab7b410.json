{"remainingRequest":"/app/cginf-site/node_modules/babel-loader/lib/index.js??ref--7-1!/app/cginf-site/src/theme/SearchBar/lib/DocSearch.js","dependencies":[{"path":"/app/cginf-site/src/theme/SearchBar/lib/DocSearch.js","mtime":1597185808000},{"path":"/app/cginf-site/node_modules/cache-loader/dist/cjs.js","mtime":1597184550000},{"path":"/app/cginf-site/node_modules/babel-loader/lib/index.js","mtime":1597184549000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}