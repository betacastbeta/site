{"remainingRequest":"/app/node_modules/babel-loader/lib/index.js??ref--7-1!/app/src/theme/SearchBar/lib/lunar-search.js","dependencies":[{"path":"/app/src/theme/SearchBar/lib/lunar-search.js","mtime":1601287841000},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1601287834000},{"path":"/app/node_modules/babel-loader/lib/index.js","mtime":1601287834000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGx1bnIgZnJvbSJAZ2VuZXJhdGVkL2x1bnIuY2xpZW50IjtsdW5yLnRva2VuaXplci5zZXBhcmF0b3I9L1tcc1wtL10rLztjbGFzcyBMdW5yU2VhcmNoQWRhcHRlcntjb25zdHJ1Y3RvcihzZWFyY2hEb2NzLHNlYXJjaEluZGV4KXt0aGlzLnNlYXJjaERvY3M9c2VhcmNoRG9jczt0aGlzLmx1bnJJbmRleD1sdW5yLkluZGV4LmxvYWQoc2VhcmNoSW5kZXgpO31nZXRMdW5yUmVzdWx0KGlucHV0KXtyZXR1cm4gdGhpcy5sdW5ySW5kZXgucXVlcnkoZnVuY3Rpb24ocXVlcnkpe2NvbnN0IHRva2Vucz1sdW5yLnRva2VuaXplcihpbnB1dCk7cXVlcnkudGVybSh0b2tlbnMse2Jvb3N0OjEwfSk7cXVlcnkudGVybSh0b2tlbnMse3dpbGRjYXJkOmx1bnIuUXVlcnkud2lsZGNhcmQuVFJBSUxJTkd9KTt9KTt9Z2V0SGl0KGRvYyxmb3JtYXR0ZWRUaXRsZSxmb3JtYXR0ZWRDb250ZW50KXtyZXR1cm57aGllcmFyY2h5OntsdmwwOmRvYy5wYWdlVGl0bGV8fGRvYy50aXRsZSxsdmwxOmRvYy50eXBlPT09MD9udWxsOmRvYy50aXRsZX0sdXJsOmRvYy51cmwsX3NuaXBwZXRSZXN1bHQ6Zm9ybWF0dGVkQ29udGVudD97Y29udGVudDp7dmFsdWU6Zm9ybWF0dGVkQ29udGVudCxtYXRjaExldmVsOiJmdWxsIn19Om51bGwsX2hpZ2hsaWdodFJlc3VsdDp7aGllcmFyY2h5OntsdmwwOnt2YWx1ZTpkb2MudHlwZT09PTA/Zm9ybWF0dGVkVGl0bGV8fGRvYy50aXRsZTpkb2MucGFnZVRpdGxlfSxsdmwxOmRvYy50eXBlPT09MD9udWxsOnt2YWx1ZTpmb3JtYXR0ZWRUaXRsZXx8ZG9jLnRpdGxlfX19fTt9Z2V0VGl0bGVIaXQoZG9jLHBvc2l0aW9uLGxlbmd0aCl7Y29uc3Qgc3RhcnQ9cG9zaXRpb25bMF07Y29uc3QgZW5kPXBvc2l0aW9uWzBdK2xlbmd0aDtsZXQgZm9ybWF0dGVkVGl0bGU9ZG9jLnRpdGxlLnN1YnN0cmluZygwLHN0YXJ0KSsnPHNwYW4gY2xhc3M9ImFsZ29saWEtZG9jc2VhcmNoLXN1Z2dlc3Rpb24tLWhpZ2hsaWdodCI+Jytkb2MudGl0bGUuc3Vic3RyaW5nKHN0YXJ0LGVuZCkrJzwvc3Bhbj4nK2RvYy50aXRsZS5zdWJzdHJpbmcoZW5kLGRvYy50aXRsZS5sZW5ndGgpO3JldHVybiB0aGlzLmdldEhpdChkb2MsZm9ybWF0dGVkVGl0bGUpO31nZXRLZXl3b3JkSGl0KGRvYyxwb3NpdGlvbixsZW5ndGgpe2NvbnN0IHN0YXJ0PXBvc2l0aW9uWzBdO2NvbnN0IGVuZD1wb3NpdGlvblswXStsZW5ndGg7bGV0IGZvcm1hdHRlZFRpdGxlPWRvYy50aXRsZSsnPGJyIC8+PGk+S2V5d29yZHM6ICcrZG9jLmtleXdvcmRzLnN1YnN0cmluZygwLHN0YXJ0KSsnPHNwYW4gY2xhc3M9ImFsZ29saWEtZG9jc2VhcmNoLXN1Z2dlc3Rpb24tLWhpZ2hsaWdodCI+Jytkb2Mua2V5d29yZHMuc3Vic3RyaW5nKHN0YXJ0LGVuZCkrJzwvc3Bhbj4nK2RvYy5rZXl3b3Jkcy5zdWJzdHJpbmcoZW5kLGRvYy5rZXl3b3Jkcy5sZW5ndGgpKyc8L2k+JztyZXR1cm4gdGhpcy5nZXRIaXQoZG9jLGZvcm1hdHRlZFRpdGxlKTt9Z2V0Q29udGVudEhpdChkb2MscG9zaXRpb24pe2NvbnN0IHN0YXJ0PXBvc2l0aW9uWzBdO2NvbnN0IGVuZD1wb3NpdGlvblswXStwb3NpdGlvblsxXTtsZXQgcHJldmlld1N0YXJ0PXN0YXJ0O2xldCBwcmV2aWV3RW5kPWVuZDtsZXQgZWxsaXBzZXNCZWZvcmU9dHJ1ZTtsZXQgZWxsaXBzZXNBZnRlcj10cnVlO2ZvcihsZXQgaz0wO2s8MztrKyspe2NvbnN0IG5leHRTcGFjZT1kb2MuY29udGVudC5sYXN0SW5kZXhPZignICcscHJldmlld1N0YXJ0LTIpO2NvbnN0IG5leHREb3Q9ZG9jLmNvbnRlbnQubGFzdEluZGV4T2YoJy4nLHByZXZpZXdTdGFydC0yKTtpZihuZXh0RG90PjAmJm5leHREb3Q+bmV4dFNwYWNlKXtwcmV2aWV3U3RhcnQ9bmV4dERvdCsxO2VsbGlwc2VzQmVmb3JlPWZhbHNlO2JyZWFrO31pZihuZXh0U3BhY2U8MCl7cHJldmlld1N0YXJ0PTA7ZWxsaXBzZXNCZWZvcmU9ZmFsc2U7YnJlYWs7fXByZXZpZXdTdGFydD1uZXh0U3BhY2UrMTt9Zm9yKGxldCBrPTA7azwxMDtrKyspe2NvbnN0IG5leHRTcGFjZT1kb2MuY29udGVudC5pbmRleE9mKCcgJyxwcmV2aWV3RW5kKzEpO2NvbnN0IG5leHREb3Q9ZG9jLmNvbnRlbnQuaW5kZXhPZignLicscHJldmlld0VuZCsxKTtpZihuZXh0RG90PjAmJm5leHREb3Q8bmV4dFNwYWNlKXtwcmV2aWV3RW5kPW5leHREb3Q7ZWxsaXBzZXNBZnRlcj1mYWxzZTticmVhazt9aWYobmV4dFNwYWNlPDApe3ByZXZpZXdFbmQ9ZG9jLmNvbnRlbnQubGVuZ3RoO2VsbGlwc2VzQWZ0ZXI9ZmFsc2U7YnJlYWs7fXByZXZpZXdFbmQ9bmV4dFNwYWNlO31sZXQgcHJldmlldz1kb2MuY29udGVudC5zdWJzdHJpbmcocHJldmlld1N0YXJ0LHN0YXJ0KTtpZihlbGxpcHNlc0JlZm9yZSl7cHJldmlldz0nLi4uICcrcHJldmlldzt9cHJldmlldys9JzxzcGFuIGNsYXNzPSJhbGdvbGlhLWRvY3NlYXJjaC1zdWdnZXN0aW9uLS1oaWdobGlnaHQiPicrZG9jLmNvbnRlbnQuc3Vic3RyaW5nKHN0YXJ0LGVuZCkrJzwvc3Bhbj4nO3ByZXZpZXcrPWRvYy5jb250ZW50LnN1YnN0cmluZyhlbmQscHJldmlld0VuZCk7aWYoZWxsaXBzZXNBZnRlcil7cHJldmlldys9JyAuLi4nO31yZXR1cm4gdGhpcy5nZXRIaXQoZG9jLG51bGwscHJldmlldyk7fXNlYXJjaChpbnB1dCl7cmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLHJlaik9Pntjb25zdCByZXN1bHRzPXRoaXMuZ2V0THVuclJlc3VsdChpbnB1dCk7Y29uc3QgaGl0cz1bXTtyZXN1bHRzLmxlbmd0aD41JiYocmVzdWx0cy5sZW5ndGg9NSk7dGhpcy50aXRsZUhpdHNSZXM9W107dGhpcy5jb250ZW50SGl0c1Jlcz1bXTtyZXN1bHRzLmZvckVhY2gocmVzdWx0PT57Y29uc3QgZG9jPXRoaXMuc2VhcmNoRG9jc1tyZXN1bHQucmVmXTtjb25zdHttZXRhZGF0YX09cmVzdWx0Lm1hdGNoRGF0YTtmb3IobGV0IGkgaW4gbWV0YWRhdGEpe2lmKG1ldGFkYXRhW2ldLnRpdGxlKXtpZighdGhpcy50aXRsZUhpdHNSZXMuaW5jbHVkZXMocmVzdWx0LnJlZikpe2NvbnN0IHBvc2l0aW9uPW1ldGFkYXRhW2ldLnRpdGxlLnBvc2l0aW9uWzBdO2hpdHMucHVzaCh0aGlzLmdldFRpdGxlSGl0KGRvYyxwb3NpdGlvbixpbnB1dC5sZW5ndGgpKTt0aGlzLnRpdGxlSGl0c1Jlcy5wdXNoKHJlc3VsdC5yZWYpO319ZWxzZSBpZihtZXRhZGF0YVtpXS5jb250ZW50KXtjb25zdCBwb3NpdGlvbj1tZXRhZGF0YVtpXS5jb250ZW50LnBvc2l0aW9uWzBdO2hpdHMucHVzaCh0aGlzLmdldENvbnRlbnRIaXQoZG9jLHBvc2l0aW9uKSk7fWVsc2UgaWYobWV0YWRhdGFbaV0ua2V5d29yZHMpe2NvbnN0IHBvc2l0aW9uPW1ldGFkYXRhW2ldLmtleXdvcmRzLnBvc2l0aW9uWzBdO2hpdHMucHVzaCh0aGlzLmdldEtleXdvcmRIaXQoZG9jLHBvc2l0aW9uLGlucHV0Lmxlbmd0aCkpO3RoaXMudGl0bGVIaXRzUmVzLnB1c2gocmVzdWx0LnJlZik7fX19KTtoaXRzLmxlbmd0aD41JiYoaGl0cy5sZW5ndGg9NSk7cmVzb2x2ZShoaXRzKTt9KTt9fWV4cG9ydCBkZWZhdWx0IEx1bnJTZWFyY2hBZGFwdGVyOw=="},{"version":3,"sources":["/app/src/theme/SearchBar/lib/lunar-search.js"],"names":["lunr","tokenizer","separator","LunrSearchAdapter","constructor","searchDocs","searchIndex","lunrIndex","Index","load","getLunrResult","input","query","tokens","term","boost","wildcard","Query","TRAILING","getHit","doc","formattedTitle","formattedContent","hierarchy","lvl0","pageTitle","title","lvl1","type","url","_snippetResult","content","value","matchLevel","_highlightResult","getTitleHit","position","length","start","end","substring","getKeywordHit","keywords","getContentHit","previewStart","previewEnd","ellipsesBefore","ellipsesAfter","k","nextSpace","lastIndexOf","nextDot","indexOf","preview","search","Promise","resolve","rej","results","hits","titleHitsRes","contentHitsRes","forEach","result","ref","metadata","matchData","i","includes","push"],"mappings":"AAAA,MAAOA,CAAAA,IAAP,KAAiB,wBAAjB,CACAA,IAAI,CAACC,SAAL,CAAeC,SAAf,CAA2B,UAA3B,CAEA,KAAMC,CAAAA,iBAAkB,CACpBC,WAAW,CAACC,UAAD,CAAaC,WAAb,CAA0B,CACjC,KAAKD,UAAL,CAAkBA,UAAlB,CACA,KAAKE,SAAL,CAAiBP,IAAI,CAACQ,KAAL,CAAWC,IAAX,CAAgBH,WAAhB,CAAjB,CACH,CAEDI,aAAa,CAACC,KAAD,CAAQ,CACjB,MAAO,MAAKJ,SAAL,CAAeK,KAAf,CAAqB,SAAUA,KAAV,CAAiB,CACzC,KAAMC,CAAAA,MAAM,CAAGb,IAAI,CAACC,SAAL,CAAeU,KAAf,CAAf,CACAC,KAAK,CAACE,IAAN,CAAWD,MAAX,CAAmB,CACfE,KAAK,CAAE,EADQ,CAAnB,EAGAH,KAAK,CAACE,IAAN,CAAWD,MAAX,CAAmB,CACfG,QAAQ,CAAEhB,IAAI,CAACiB,KAAL,CAAWD,QAAX,CAAoBE,QADf,CAAnB,EAGH,CARM,CAAP,CASH,CAEDC,MAAM,CAACC,GAAD,CAAMC,cAAN,CAAsBC,gBAAtB,CAAwC,CAC1C,MAAO,CACHC,SAAS,CAAE,CACPC,IAAI,CAAEJ,GAAG,CAACK,SAAJ,EAAiBL,GAAG,CAACM,KADpB,CAEPC,IAAI,CAAEP,GAAG,CAACQ,IAAJ,GAAa,CAAb,CAAiB,IAAjB,CAAwBR,GAAG,CAACM,KAF3B,CADR,CAKHG,GAAG,CAAET,GAAG,CAACS,GALN,CAMHC,cAAc,CAAER,gBAAgB,CAAG,CAC/BS,OAAO,CAAE,CACLC,KAAK,CAAEV,gBADF,CAELW,UAAU,CAAE,MAFP,CADsB,CAAH,CAK5B,IAXD,CAYHC,gBAAgB,CAAE,CACdX,SAAS,CAAE,CACPC,IAAI,CAAE,CACFQ,KAAK,CAAEZ,GAAG,CAACQ,IAAJ,GAAa,CAAb,CAAiBP,cAAc,EAAID,GAAG,CAACM,KAAvC,CAA+CN,GAAG,CAACK,SADxD,CADC,CAIPE,IAAI,CACAP,GAAG,CAACQ,IAAJ,GAAa,CAAb,CACM,IADN,CAEM,CACEI,KAAK,CAAEX,cAAc,EAAID,GAAG,CAACM,KAD/B,CAPH,CADG,CAZf,CAAP,CA0BH,CACDS,WAAW,CAACf,GAAD,CAAMgB,QAAN,CAAgBC,MAAhB,CAAwB,CAC/B,KAAMC,CAAAA,KAAK,CAAGF,QAAQ,CAAC,CAAD,CAAtB,CACA,KAAMG,CAAAA,GAAG,CAAGH,QAAQ,CAAC,CAAD,CAAR,CAAcC,MAA1B,CACA,GAAIhB,CAAAA,cAAc,CAAGD,GAAG,CAACM,KAAJ,CAAUc,SAAV,CAAoB,CAApB,CAAuBF,KAAvB,EAAgC,wDAAhC,CAA2FlB,GAAG,CAACM,KAAJ,CAAUc,SAAV,CAAoBF,KAApB,CAA2BC,GAA3B,CAA3F,CAA6H,SAA7H,CAAyInB,GAAG,CAACM,KAAJ,CAAUc,SAAV,CAAoBD,GAApB,CAAyBnB,GAAG,CAACM,KAAJ,CAAUW,MAAnC,CAA9J,CACA,MAAO,MAAKlB,MAAL,CAAYC,GAAZ,CAAiBC,cAAjB,CAAP,CACH,CAEDoB,aAAa,CAACrB,GAAD,CAAMgB,QAAN,CAAgBC,MAAhB,CAAwB,CACjC,KAAMC,CAAAA,KAAK,CAAGF,QAAQ,CAAC,CAAD,CAAtB,CACA,KAAMG,CAAAA,GAAG,CAAGH,QAAQ,CAAC,CAAD,CAAR,CAAcC,MAA1B,CACA,GAAIhB,CAAAA,cAAc,CAAGD,GAAG,CAACM,KAAJ,CAAY,qBAAZ,CAAoCN,GAAG,CAACsB,QAAJ,CAAaF,SAAb,CAAuB,CAAvB,CAA0BF,KAA1B,CAApC,CAAuE,wDAAvE,CAAkIlB,GAAG,CAACsB,QAAJ,CAAaF,SAAb,CAAuBF,KAAvB,CAA8BC,GAA9B,CAAlI,CAAuK,SAAvK,CAAmLnB,GAAG,CAACsB,QAAJ,CAAaF,SAAb,CAAuBD,GAAvB,CAA4BnB,GAAG,CAACsB,QAAJ,CAAaL,MAAzC,CAAnL,CAAsO,MAA3P,CACA,MAAO,MAAKlB,MAAL,CAAYC,GAAZ,CAAiBC,cAAjB,CAAP,CACH,CAEDsB,aAAa,CAACvB,GAAD,CAAMgB,QAAN,CAAgB,CACzB,KAAME,CAAAA,KAAK,CAAGF,QAAQ,CAAC,CAAD,CAAtB,CACA,KAAMG,CAAAA,GAAG,CAAGH,QAAQ,CAAC,CAAD,CAAR,CAAcA,QAAQ,CAAC,CAAD,CAAlC,CACA,GAAIQ,CAAAA,YAAY,CAAGN,KAAnB,CACA,GAAIO,CAAAA,UAAU,CAAGN,GAAjB,CACA,GAAIO,CAAAA,cAAc,CAAG,IAArB,CACA,GAAIC,CAAAA,aAAa,CAAG,IAApB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,CAApB,CAAuBA,CAAC,EAAxB,CAA4B,CACxB,KAAMC,CAAAA,SAAS,CAAG7B,GAAG,CAACW,OAAJ,CAAYmB,WAAZ,CAAwB,GAAxB,CAA6BN,YAAY,CAAG,CAA5C,CAAlB,CACA,KAAMO,CAAAA,OAAO,CAAG/B,GAAG,CAACW,OAAJ,CAAYmB,WAAZ,CAAwB,GAAxB,CAA6BN,YAAY,CAAG,CAA5C,CAAhB,CACA,GAAKO,OAAO,CAAG,CAAX,EAAkBA,OAAO,CAAGF,SAAhC,CAA4C,CACxCL,YAAY,CAAGO,OAAO,CAAG,CAAzB,CACAL,cAAc,CAAG,KAAjB,CACA,MACH,CACD,GAAIG,SAAS,CAAG,CAAhB,CAAmB,CACfL,YAAY,CAAG,CAAf,CACAE,cAAc,CAAG,KAAjB,CACA,MACH,CACDF,YAAY,CAAGK,SAAS,CAAG,CAA3B,CACH,CACD,IAAK,GAAID,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG,EAApB,CAAwBA,CAAC,EAAzB,CAA6B,CACzB,KAAMC,CAAAA,SAAS,CAAG7B,GAAG,CAACW,OAAJ,CAAYqB,OAAZ,CAAoB,GAApB,CAAyBP,UAAU,CAAG,CAAtC,CAAlB,CACA,KAAMM,CAAAA,OAAO,CAAG/B,GAAG,CAACW,OAAJ,CAAYqB,OAAZ,CAAoB,GAApB,CAAyBP,UAAU,CAAG,CAAtC,CAAhB,CACA,GAAKM,OAAO,CAAG,CAAX,EAAkBA,OAAO,CAAGF,SAAhC,CAA4C,CACxCJ,UAAU,CAAGM,OAAb,CACAJ,aAAa,CAAG,KAAhB,CACA,MACH,CACD,GAAIE,SAAS,CAAG,CAAhB,CAAmB,CACfJ,UAAU,CAAGzB,GAAG,CAACW,OAAJ,CAAYM,MAAzB,CACAU,aAAa,CAAG,KAAhB,CACA,MACH,CACDF,UAAU,CAAGI,SAAb,CACH,CACD,GAAII,CAAAA,OAAO,CAAGjC,GAAG,CAACW,OAAJ,CAAYS,SAAZ,CAAsBI,YAAtB,CAAoCN,KAApC,CAAd,CACA,GAAIQ,cAAJ,CAAoB,CAChBO,OAAO,CAAG,OAASA,OAAnB,CACH,CACDA,OAAO,EAAI,yDAA2DjC,GAAG,CAACW,OAAJ,CAAYS,SAAZ,CAAsBF,KAAtB,CAA6BC,GAA7B,CAA3D,CAA+F,SAA1G,CACAc,OAAO,EAAIjC,GAAG,CAACW,OAAJ,CAAYS,SAAZ,CAAsBD,GAAtB,CAA2BM,UAA3B,CAAX,CACA,GAAIE,aAAJ,CAAmB,CACfM,OAAO,EAAI,MAAX,CACH,CACD,MAAO,MAAKlC,MAAL,CAAYC,GAAZ,CAAiB,IAAjB,CAAuBiC,OAAvB,CAAP,CAEH,CACDC,MAAM,CAAC3C,KAAD,CAAQ,CACV,MAAO,IAAI4C,CAAAA,OAAJ,CAAY,CAACC,OAAD,CAAUC,GAAV,GAAkB,CACjC,KAAMC,CAAAA,OAAO,CAAG,KAAKhD,aAAL,CAAmBC,KAAnB,CAAhB,CACA,KAAMgD,CAAAA,IAAI,CAAG,EAAb,CACAD,OAAO,CAACrB,MAAR,CAAiB,CAAjB,GAAuBqB,OAAO,CAACrB,MAAR,CAAiB,CAAxC,EACA,KAAKuB,YAAL,CAAoB,EAApB,CACA,KAAKC,cAAL,CAAsB,EAAtB,CACAH,OAAO,CAACI,OAAR,CAAgBC,MAAM,EAAI,CACtB,KAAM3C,CAAAA,GAAG,CAAG,KAAKf,UAAL,CAAgB0D,MAAM,CAACC,GAAvB,CAAZ,CACA,KAAM,CAAEC,QAAF,EAAeF,MAAM,CAACG,SAA5B,CACA,IAAK,GAAIC,CAAAA,CAAT,GAAcF,CAAAA,QAAd,CAAwB,CACpB,GAAIA,QAAQ,CAACE,CAAD,CAAR,CAAYzC,KAAhB,CAAuB,CACnB,GAAI,CAAC,KAAKkC,YAAL,CAAkBQ,QAAlB,CAA2BL,MAAM,CAACC,GAAlC,CAAL,CAA6C,CACzC,KAAM5B,CAAAA,QAAQ,CAAG6B,QAAQ,CAACE,CAAD,CAAR,CAAYzC,KAAZ,CAAkBU,QAAlB,CAA2B,CAA3B,CAAjB,CACAuB,IAAI,CAACU,IAAL,CAAU,KAAKlC,WAAL,CAAiBf,GAAjB,CAAsBgB,QAAtB,CAAgCzB,KAAK,CAAC0B,MAAtC,CAAV,EACA,KAAKuB,YAAL,CAAkBS,IAAlB,CAAuBN,MAAM,CAACC,GAA9B,EACH,CACJ,CAND,IAMO,IAAIC,QAAQ,CAACE,CAAD,CAAR,CAAYpC,OAAhB,CAAyB,CAC5B,KAAMK,CAAAA,QAAQ,CAAG6B,QAAQ,CAACE,CAAD,CAAR,CAAYpC,OAAZ,CAAoBK,QAApB,CAA6B,CAA7B,CAAjB,CACAuB,IAAI,CAACU,IAAL,CAAU,KAAK1B,aAAL,CAAmBvB,GAAnB,CAAwBgB,QAAxB,CAAV,EACH,CAHM,IAGA,IAAI6B,QAAQ,CAACE,CAAD,CAAR,CAAYzB,QAAhB,CAA0B,CAC7B,KAAMN,CAAAA,QAAQ,CAAG6B,QAAQ,CAACE,CAAD,CAAR,CAAYzB,QAAZ,CAAqBN,QAArB,CAA8B,CAA9B,CAAjB,CACAuB,IAAI,CAACU,IAAL,CAAU,KAAK5B,aAAL,CAAmBrB,GAAnB,CAAwBgB,QAAxB,CAAkCzB,KAAK,CAAC0B,MAAxC,CAAV,EACA,KAAKuB,YAAL,CAAkBS,IAAlB,CAAuBN,MAAM,CAACC,GAA9B,EACH,CACJ,CACJ,CAnBD,EAoBAL,IAAI,CAACtB,MAAL,CAAc,CAAd,GAAoBsB,IAAI,CAACtB,MAAL,CAAc,CAAlC,EACAmB,OAAO,CAACG,IAAD,CAAP,CACH,CA5BM,CAAP,CA6BH,CA3ImB,CA8IxB,cAAexD,CAAAA,iBAAf","sourcesContent":["import lunr from \"@generated/lunr.client\";\r\nlunr.tokenizer.separator = /[\\s\\-/]+/;\r\n\r\nclass LunrSearchAdapter {\r\n    constructor(searchDocs, searchIndex) {\r\n        this.searchDocs = searchDocs;\r\n        this.lunrIndex = lunr.Index.load(searchIndex);\r\n    }\r\n\r\n    getLunrResult(input) {\r\n        return this.lunrIndex.query(function (query) {\r\n            const tokens = lunr.tokenizer(input);\r\n            query.term(tokens, {\r\n                boost: 10\r\n            });\r\n            query.term(tokens, {\r\n                wildcard: lunr.Query.wildcard.TRAILING\r\n            });\r\n        });\r\n    }\r\n\r\n    getHit(doc, formattedTitle, formattedContent) {\r\n        return {\r\n            hierarchy: {\r\n                lvl0: doc.pageTitle || doc.title,\r\n                lvl1: doc.type === 0 ? null : doc.title\r\n            },\r\n            url: doc.url,\r\n            _snippetResult: formattedContent ? {\r\n                content: {\r\n                    value: formattedContent,\r\n                    matchLevel: \"full\"\r\n                }\r\n            } : null,\r\n            _highlightResult: {\r\n                hierarchy: {\r\n                    lvl0: {\r\n                        value: doc.type === 0 ? formattedTitle || doc.title : doc.pageTitle,\r\n                    },\r\n                    lvl1:\r\n                        doc.type === 0\r\n                            ? null\r\n                            : {\r\n                                value: formattedTitle || doc.title\r\n                            }\r\n                }\r\n            }\r\n        };\r\n    }\r\n    getTitleHit(doc, position, length) {\r\n        const start = position[0];\r\n        const end = position[0] + length;\r\n        let formattedTitle = doc.title.substring(0, start) + '<span class=\"algolia-docsearch-suggestion--highlight\">' + doc.title.substring(start, end) + '</span>' + doc.title.substring(end, doc.title.length);\r\n        return this.getHit(doc, formattedTitle)\r\n    }\r\n\r\n    getKeywordHit(doc, position, length) {\r\n        const start = position[0];\r\n        const end = position[0] + length;\r\n        let formattedTitle = doc.title + '<br /><i>Keywords: ' + doc.keywords.substring(0, start) + '<span class=\"algolia-docsearch-suggestion--highlight\">' + doc.keywords.substring(start, end) + '</span>' + doc.keywords.substring(end, doc.keywords.length) + '</i>'\r\n        return this.getHit(doc, formattedTitle)\r\n    }\r\n\r\n    getContentHit(doc, position) {\r\n        const start = position[0];\r\n        const end = position[0] + position[1];\r\n        let previewStart = start;\r\n        let previewEnd = end;\r\n        let ellipsesBefore = true;\r\n        let ellipsesAfter = true;\r\n        for (let k = 0; k < 3; k++) {\r\n            const nextSpace = doc.content.lastIndexOf(' ', previewStart - 2);\r\n            const nextDot = doc.content.lastIndexOf('.', previewStart - 2);\r\n            if ((nextDot > 0) && (nextDot > nextSpace)) {\r\n                previewStart = nextDot + 1;\r\n                ellipsesBefore = false;\r\n                break;\r\n            }\r\n            if (nextSpace < 0) {\r\n                previewStart = 0;\r\n                ellipsesBefore = false;\r\n                break;\r\n            }\r\n            previewStart = nextSpace + 1;\r\n        }\r\n        for (let k = 0; k < 10; k++) {\r\n            const nextSpace = doc.content.indexOf(' ', previewEnd + 1);\r\n            const nextDot = doc.content.indexOf('.', previewEnd + 1);\r\n            if ((nextDot > 0) && (nextDot < nextSpace)) {\r\n                previewEnd = nextDot;\r\n                ellipsesAfter = false;\r\n                break;\r\n            }\r\n            if (nextSpace < 0) {\r\n                previewEnd = doc.content.length;\r\n                ellipsesAfter = false;\r\n                break;\r\n            }\r\n            previewEnd = nextSpace;\r\n        }\r\n        let preview = doc.content.substring(previewStart, start);\r\n        if (ellipsesBefore) {\r\n            preview = '... ' + preview;\r\n        }\r\n        preview += '<span class=\"algolia-docsearch-suggestion--highlight\">' + doc.content.substring(start, end) + '</span>';\r\n        preview += doc.content.substring(end, previewEnd);\r\n        if (ellipsesAfter) {\r\n            preview += ' ...';\r\n        }\r\n        return this.getHit(doc, null, preview);\r\n\r\n    }\r\n    search(input) {\r\n        return new Promise((resolve, rej) => {\r\n            const results = this.getLunrResult(input);\r\n            const hits = [];\r\n            results.length > 5 && (results.length = 5);\r\n            this.titleHitsRes = []\r\n            this.contentHitsRes = []\r\n            results.forEach(result => {\r\n                const doc = this.searchDocs[result.ref];\r\n                const { metadata } = result.matchData;\r\n                for (let i in metadata) {\r\n                    if (metadata[i].title) {\r\n                        if (!this.titleHitsRes.includes(result.ref)) {\r\n                            const position = metadata[i].title.position[0]\r\n                            hits.push(this.getTitleHit(doc, position, input.length));\r\n                            this.titleHitsRes.push(result.ref);\r\n                        }\r\n                    } else if (metadata[i].content) {\r\n                        const position = metadata[i].content.position[0]\r\n                        hits.push(this.getContentHit(doc, position))\r\n                    } else if (metadata[i].keywords) {\r\n                        const position = metadata[i].keywords.position[0]\r\n                        hits.push(this.getKeywordHit(doc, position, input.length));\r\n                        this.titleHitsRes.push(result.ref);\r\n                    }\r\n                }\r\n            });\r\n            hits.length > 5 && (hits.length = 5);\r\n            resolve(hits);\r\n        });\r\n    }\r\n}\r\n\r\nexport default LunrSearchAdapter;\r\n"]}]}